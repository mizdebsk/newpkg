From 9b35d4b2733015bd0b22666016bfdcba9f6d6e92 Mon Sep 17 00:00:00 2001
From: Michael Simacek <msimacek@redhat.com>
Date: Mon, 13 Jan 2014 18:36:56 +0100
Subject: [PATCH] icu4j_v50

Signed-off-by: Michael Simacek <msimacek@redhat.com>
---
 .../lucene/analysis/icu/segmentation/BreakIteratorWrapper.java | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java b/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java
index 654d1ad..58d84bf 100644
--- a/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java
+++ b/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java
@@ -21,7 +21,6 @@ import java.text.CharacterIterator;
 
 import com.ibm.icu.lang.UCharacter;
 import com.ibm.icu.text.BreakIterator;
-import com.ibm.icu.text.DictionaryBasedBreakIterator;
 import com.ibm.icu.text.RuleBasedBreakIterator;
 import com.ibm.icu.text.UTF16;
 
@@ -35,7 +34,7 @@ import com.ibm.icu.text.UTF16;
  * <p>
  * DictionaryBasedBreakIterator is a subclass of RuleBasedBreakIterator, but
  * doesn't actually behave as a subclass: it always returns 0 for
- * getRuleStatus(): 
+ * getRuleStatus():
  * http://bugs.icu-project.org/trac/ticket/4730: Thai RBBI, no boundary type
  * tags
  * @lucene.experimental
@@ -67,8 +66,7 @@ abstract class BreakIteratorWrapper {
    * it like a generic BreakIterator.
    */
   static BreakIteratorWrapper wrap(BreakIterator breakIterator) {
-    if (breakIterator instanceof RuleBasedBreakIterator
-        && !(breakIterator instanceof DictionaryBasedBreakIterator))
+    if (breakIterator instanceof RuleBasedBreakIterator)
       return new RBBIWrapper((RuleBasedBreakIterator) breakIterator);
     else
       return new BIWrapper(breakIterator);
@@ -110,7 +108,7 @@ abstract class BreakIteratorWrapper {
    * Generic BreakIterator wrapper: Either the rulestatus method is not
    * available or always returns 0. Calculate a rulestatus here so it behaves
    * like RuleBasedBreakIterator.
-   * 
+   *
    * Note: This is slower than RuleBasedBreakIterator.
    */
   static final class BIWrapper extends BreakIteratorWrapper {
@@ -153,7 +151,7 @@ abstract class BreakIteratorWrapper {
         if (UCharacter.isDigit(codepoint))
           return RuleBasedBreakIterator.WORD_NUMBER;
         else if (UCharacter.isLetter(codepoint)) {
-          // TODO: try to separately specify ideographic, kana? 
+          // TODO: try to separately specify ideographic, kana?
           // [currently all bundled as letter for this case]
           return RuleBasedBreakIterator.WORD_LETTER;
         }
-- 
1.8.4.2

