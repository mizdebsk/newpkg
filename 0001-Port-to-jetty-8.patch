From e7c5fab3875a9e4089277e7d7c9711d974b63601 Mon Sep 17 00:00:00 2001
From: Michal Srb <msrb@redhat.com>
Date: Wed, 27 Feb 2013 12:38:47 +0100
Subject: [PATCH] Port to jetty 8

---
 wagon-provider-test/pom.xml                        | 30 ++++++++-
 .../apache/maven/wagon/http/HttpWagonTestCase.java | 77 +++++++++++-----------
 2 files changed, 67 insertions(+), 40 deletions(-)

diff --git a/wagon-provider-test/pom.xml b/wagon-provider-test/pom.xml
index 1bc9826..efa730d 100644
--- a/wagon-provider-test/pom.xml
+++ b/wagon-provider-test/pom.xml
@@ -51,8 +51,34 @@ under the License.
       <scope>compile</scope>
     </dependency>
     <dependency>
-      <groupId>org.mortbay.jetty</groupId>
-      <artifactId>jetty</artifactId>
+      <groupId>log4j</groupId>
+      <artifactId>log4j</artifactId>
+      <scope>compile</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.eclipse.jetty</groupId>
+      <artifactId>jetty-server</artifactId>
+      <scope>compile</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.eclipse.jetty</groupId>
+      <artifactId>jetty-util</artifactId>
+      <scope>compile</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.eclipse.jetty</groupId>
+      <artifactId>jetty-client</artifactId>
+      <scope>compile</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.eclipse.jetty</groupId>
+      <artifactId>jetty-security</artifactId>
+      <scope>compile</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.eclipse.jetty</groupId>
+      <artifactId>jetty-servlet</artifactId>
+      <scope>compile</scope>
     </dependency>
 
   </dependencies>
diff --git a/wagon-provider-test/src/main/java/org/apache/maven/wagon/http/HttpWagonTestCase.java b/wagon-provider-test/src/main/java/org/apache/maven/wagon/http/HttpWagonTestCase.java
index 4ee5475..66c77c9 100644
--- a/wagon-provider-test/src/main/java/org/apache/maven/wagon/http/HttpWagonTestCase.java
+++ b/wagon-provider-test/src/main/java/org/apache/maven/wagon/http/HttpWagonTestCase.java
@@ -34,20 +34,23 @@
 import org.codehaus.plexus.util.IOUtil;
 import org.codehaus.plexus.util.StringOutputStream;
 import org.codehaus.plexus.util.StringUtils;
-import org.mortbay.jetty.Handler;
-import org.mortbay.jetty.HttpConnection;
-import org.mortbay.jetty.Request;
-import org.mortbay.jetty.Response;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.handler.AbstractHandler;
-import org.mortbay.jetty.handler.HandlerCollection;
-import org.mortbay.jetty.security.Constraint;
-import org.mortbay.jetty.security.ConstraintMapping;
-import org.mortbay.jetty.security.HashUserRealm;
-import org.mortbay.jetty.security.SecurityHandler;
-import org.mortbay.jetty.servlet.Context;
-import org.mortbay.jetty.servlet.DefaultServlet;
-import org.mortbay.jetty.servlet.ServletHolder;
+import org.eclipse.jetty.server.Handler;
+import org.eclipse.jetty.server.AbstractHttpConnection;
+import org.eclipse.jetty.server.Request;
+import org.eclipse.jetty.server.Response;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.UserIdentity;
+import org.eclipse.jetty.server.handler.AbstractHandler;
+import org.eclipse.jetty.server.handler.HandlerCollection;
+import org.eclipse.jetty.util.security.Constraint;
+import org.eclipse.jetty.util.security.Password;
+import org.eclipse.jetty.security.ConstraintMapping;
+import org.eclipse.jetty.security.HashLoginService;
+import org.eclipse.jetty.security.SecurityHandler;
+import org.eclipse.jetty.security.ConstraintSecurityHandler;
+import org.eclipse.jetty.servlet.ServletContextHandler;
+import org.eclipse.jetty.servlet.DefaultServlet;
+import org.eclipse.jetty.servlet.ServletHolder;
 
 import javax.servlet.ServletException;
 import javax.servlet.ServletInputStream;
@@ -95,7 +98,7 @@ protected void setupWagonTestingFixtures()
         server = new Server( 0 );
 
         PutHandler putHandler = new PutHandler( repositoryDirectory );
-        server.addHandler( putHandler );
+        server.setHandler( putHandler );
 
         createContext( server, repositoryDirectory );
 
@@ -119,8 +122,8 @@ protected final int getTestRepositoryPort()
     protected void createContext( Server server, File repositoryDirectory )
         throws IOException
     {
-        Context root = new Context( server, "/", Context.SESSIONS );
-        root.setResourceBase( repositoryDirectory.getAbsolutePath() );
+        ServletContextHandler root = new ServletContextHandler( server, "/", ServletContextHandler.SESSIONS );
+        //root.setResourceBase( repositoryDirectory.getAbsolutePath() );
         ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );
         root.addServlet( servletHolder, "/*" );
     }
@@ -368,7 +371,7 @@ public void testGzipGet()
         Server server = new Server( getTestRepositoryPort() );
 
         String localRepositoryPath = FileTestUtils.getTestOutputDir().toString();
-        Context root = new Context( server, "/", Context.SESSIONS );
+        ServletContextHandler root = new ServletContextHandler( server, "/", ServletContextHandler.SESSIONS );
         root.setResourceBase( localRepositoryPath );
         ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );
         servletHolder.setInitParameter( "gzip", "true" );
@@ -901,13 +904,13 @@ public void testRedirectPutFileRelativeUrl()
             this.repositoryDirectory = repositoryDirectory;
         }
 
-        public void handle( String s, HttpServletRequest req, HttpServletResponse resp, int i )
+        public void handle( String s, Request baseRequest, HttpServletRequest req, HttpServletResponse resp )
             throws IOException, ServletException
         {
             if ( req.getRequestURI().contains( "redirectRequest" ) )
             {
                 PutHandler putHandler = new PutHandler( this.repositoryDirectory );
-                putHandler.handle( s, req, resp, i );
+                putHandler.handle( s, baseRequest, req, resp );
                 handlerRequestResponses.add(
                     new HandlerRequestResponse( req.getMethod(), ( (Response) resp ).getStatus(),
                                                 req.getRequestURI() ) );
@@ -1062,7 +1065,7 @@ public void runTestSecuredGet( AuthenticationInfo authInfo )
 
             assertEquals( "top secret", IOUtil.toString( in ) );
 
-            TestSecurityHandler securityHandler = (TestSecurityHandler) ( (Context) server.getHandler() ).getHandler();
+            TestSecurityHandler securityHandler = (TestSecurityHandler) ( (ServletContextHandler) server.getHandler() ).getHandler();
             testPreemptiveAuthenticationGet( securityHandler, supportPreemptiveAuthenticationGet() );
 
         }
@@ -1113,7 +1116,7 @@ public void runTestSecuredGetToStream( AuthenticationInfo authInfo )
 
             assertEquals( "top secret", out.toString() );
 
-            TestSecurityHandler securityHandler = (TestSecurityHandler) ( (Context) server.getHandler() ).getHandler();
+            TestSecurityHandler securityHandler = (TestSecurityHandler) ( (ServletContextHandler) server.getHandler() ).getHandler();
             testPreemptiveAuthenticationGet( securityHandler, supportPreemptiveAuthenticationGet() );
         }
         finally
@@ -1203,9 +1206,9 @@ private Server createSecurityServer( String localRepositoryPath )
 
         SecurityHandler sh = createSecurityHandler();
 
-        Context root = new Context( Context.SESSIONS );
+        ServletContextHandler root = new ServletContextHandler( ServletContextHandler.SESSIONS );
         root.setContextPath( "/" );
-        root.addHandler( sh );
+        root.setHandler( sh );
         root.setResourceBase( localRepositoryPath );
         ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );
         root.addServlet( servletHolder, "/*" );
@@ -1566,7 +1569,7 @@ public void setStatusToReturn( int status )
             this.status = status;
         }
 
-        public void handle( String target, HttpServletRequest request, HttpServletResponse response, int dispatch )
+        public void handle( String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response )
             throws IOException, ServletException
         {
             if ( status != 0 )
@@ -1622,11 +1625,11 @@ public PutHandler( File repositoryDirectory )
             this.resourceBase = repositoryDirectory;
         }
 
-        public void handle( String target, HttpServletRequest request, HttpServletResponse response, int dispatch )
+        public void handle( String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response )
             throws IOException, ServletException
         {
             Request base_request =
-                request instanceof Request ? (Request) request : HttpConnection.getCurrentConnection().getRequest();
+                request instanceof Request ? (Request) request : AbstractHttpConnection.getCurrentConnection().getRequest();
 
             if ( base_request.isHandled() || !"PUT".equals( base_request.getMethod() ) )
             {
@@ -1671,7 +1674,7 @@ public void handle( String target, HttpServletRequest request, HttpServletRespon
 
         List<HandlerRequestResponse> handlerRequestResponses = new ArrayList<HandlerRequestResponse>();
 
-        public void handle( String target, HttpServletRequest request, HttpServletResponse response, int dispatch )
+        public void handle( String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response )
             throws IOException, ServletException
         {
             System.out.println( " handle proxy request" );
@@ -1687,7 +1690,7 @@ public void handle( String target, HttpServletRequest request, HttpServletRespon
             }
             handlerRequestResponses.add(
                 new HandlerRequestResponse( request.getMethod(), 200, request.getRequestURI() ) );
-            super.handle( target, request, response, dispatch );
+            super.handle( target, baseRequest, request, response );
         }
     }
 
@@ -1702,7 +1705,7 @@ public TestHeaderHandler()
         {
         }
 
-        public void handle( String target, HttpServletRequest request, HttpServletResponse response, int dispatch )
+        public void handle( String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response )
             throws IOException, ServletException
         {
             headers = new HashMap();
@@ -1737,31 +1740,29 @@ protected TestSecurityHandler createSecurityHandler()
         cm.setPathSpec( "/*" );
 
         TestSecurityHandler sh = new TestSecurityHandler();
-        HashUserRealm hashUserRealm = new HashUserRealm( "MyRealm" );
-        hashUserRealm.put( "user", "secret" );
-        hashUserRealm.addUserToRole( "user", "admin" );
-        sh.setUserRealm( hashUserRealm );
+        HashLoginService hashLoginService = new HashLoginService( "MyRealm" );
+        hashLoginService.putUser( "user", new Password( "secret" ),  new String[]{ "admin" } );
+        sh.setLoginService( hashLoginService );
         sh.setConstraintMappings( new ConstraintMapping[]{ cm } );
         return sh;
     }
 
     public static class TestSecurityHandler
-        extends SecurityHandler
+        extends ConstraintSecurityHandler
     {
 
         public List<HandlerRequestResponse> handlerRequestResponses = new ArrayList<HandlerRequestResponse>();
 
         @Override
-        public void handle( String target, HttpServletRequest request, HttpServletResponse response, int dispatch )
+        public void handle( String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response )
             throws IOException, ServletException
         {
             String method = request.getMethod();
-            super.handle( target, request, response, dispatch );
+            super.handle( target, baseRequest, request, response );
 
             handlerRequestResponses.add(
                 new HandlerRequestResponse( method, ( (Response) response ).getStatus(), request.getRequestURI() ) );
         }
-
     }
 
     public static class HandlerRequestResponse
-- 
1.8.1.2

